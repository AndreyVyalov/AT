<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="EPRURYAW0075" name="environment.TestFactory" tests="30" failures="1" timestamp="24 Nov 2015 09:26:17 GMT" time="0.018" errors="0">
  <testcase name="testRectangleGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testQuadrateGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testCircleGetSquare" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetPerimeter" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testCircleNullPointer" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testQuadrateGetSquare" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testQuadrateGetSquare" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetSquare" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testCircleNullPointer" time="0.003" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleIsQuadrate" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleIsQuadrate" time="0.000" classname="environment.TestFactory">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at environment.PositiveTestsNG.testRectangleIsQuadrate(PositiveTestsNG.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
    </failure>
  </testcase> <!-- testRectangleIsQuadrate -->
  <testcase name="testRectangleGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetSquare" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testQuadrateGetPerimeter" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testCircleGetSquare" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testRectangleIsQuadrate" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testCircleGetCircumference" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testCircleGetSquare" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testQuadrateGetSquare" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testCircleGetCircumference" time="0.002" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetSquare" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testCircleGetCircumference" time="0.002" classname="environment.TestFactory"/>
  <testcase name="testQuadrateGetPerimeter" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetPerimeter" time="0.001" classname="environment.TestFactory"/>
  <testcase name="testCircleNullPointer" time="0.000" classname="environment.TestFactory"/>
  <testcase name="testRectangleGetPerimeter" time="0.001" classname="environment.TestFactory"/>
</testsuite> <!-- environment.TestFactory -->
