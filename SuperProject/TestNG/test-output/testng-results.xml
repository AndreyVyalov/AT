<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="31" passed="31">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="123" started-at="2015-11-26T15:57:20Z" finished-at="2015-11-26T15:57:20Z">
    <groups>
      <group name="rectangle">
        <method signature="PositiveTestsNG.testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleGetPerimeter" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleGetPerimeter" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleGetPerimeter" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleGetSquare(double, double)[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleGetSquare(double, double)[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleGetSquare(double, double)[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleIsQuadrate()[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleIsQuadrate" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleIsQuadrate()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleIsQuadrate" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testRectangleIsQuadrate()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleIsQuadrate" class="environment.PositiveTestsNG"/>
      </group> <!-- rectangle -->
      <group name="quadrate">
        <method signature="PositiveTestsNG.testQuadrateGetPerimeter()[pri:0, instance:environment.TestFactory@53be6b71]" name="testQuadrateGetPerimeter" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testQuadrateGetPerimeter()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testQuadrateGetPerimeter" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testQuadrateGetPerimeter()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testQuadrateGetPerimeter" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testQuadrateGetSquare()[pri:0, instance:environment.TestFactory@53be6b71]" name="testQuadrateGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testQuadrateGetSquare()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testQuadrateGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testQuadrateGetSquare()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testQuadrateGetSquare" class="environment.PositiveTestsNG"/>
      </group> <!-- quadrate -->
      <group name="circle">
        <method signature="PositiveTestsNG.testCircleGetCircumference()[pri:1, instance:environment.TestFactory@53be6b71]" name="testCircleGetCircumference" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleGetCircumference()[pri:1, instance:environment.TestFactory@6614b5ba]" name="testCircleGetCircumference" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleGetCircumference()[pri:1, instance:environment.TestFactory@7a7ff2aa]" name="testCircleGetCircumference" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleGetSquare()[pri:2, instance:environment.TestFactory@53be6b71]" name="testCircleGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleGetSquare()[pri:2, instance:environment.TestFactory@6614b5ba]" name="testCircleGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleGetSquare()[pri:2, instance:environment.TestFactory@7a7ff2aa]" name="testCircleGetSquare" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleNullPointer()[pri:0, instance:environment.TestFactory@53be6b71]" name="testCircleNullPointer" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleNullPointer()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testCircleNullPointer" class="environment.PositiveTestsNG"/>
        <method signature="PositiveTestsNG.testCircleNullPointer()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testCircleNullPointer" class="environment.PositiveTestsNG"/>
      </group> <!-- circle -->
    </groups>
    <test name="Test" duration-ms="123" started-at="2015-11-26T15:57:20Z" finished-at="2015-11-26T15:57:20Z">
      <class name="environment.TestFactory">
        <test-method status="PASS" signature="testCircleNullPointer()[pri:0, instance:environment.TestFactory@53be6b71]" name="testCircleNullPointer" duration-ms="5" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at environment.PositiveTestsNG.testCircleNullPointer(PositiveTestsNG.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleNullPointer -->
        <test-method status="PASS" signature="testCircleNullPointer()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testCircleNullPointer" duration-ms="1" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at environment.PositiveTestsNG.testCircleNullPointer(PositiveTestsNG.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleNullPointer -->
        <test-method status="PASS" signature="testCircleNullPointer()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testCircleNullPointer" duration-ms="0" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at environment.PositiveTestsNG.testCircleNullPointer(PositiveTestsNG.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleNullPointer -->
        <test-method status="PASS" signature="testCircleGetCircumference()[pri:1, instance:environment.TestFactory@53be6b71]" name="testCircleGetCircumference" duration-ms="2" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleGetCircumference -->
        <test-method status="PASS" signature="testCircleGetCircumference()[pri:1, instance:environment.TestFactory@6614b5ba]" name="testCircleGetCircumference" duration-ms="1" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleGetCircumference -->
        <test-method status="PASS" signature="testCircleGetCircumference()[pri:1, instance:environment.TestFactory@7a7ff2aa]" name="testCircleGetCircumference" duration-ms="1" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleGetCircumference -->
        <test-method status="PASS" signature="testCircleGetSquare()[pri:2, instance:environment.TestFactory@53be6b71]" name="testCircleGetSquare" duration-ms="0" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleGetSquare -->
        <test-method status="PASS" signature="testCircleGetSquare()[pri:2, instance:environment.TestFactory@6614b5ba]" name="testCircleGetSquare" duration-ms="1" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleGetSquare -->
        <test-method status="PASS" signature="testCircleGetSquare()[pri:2, instance:environment.TestFactory@7a7ff2aa]" name="testCircleGetSquare" duration-ms="1" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircleGetSquare -->
        <test-method status="PASS" signature="testQuadrateGetPerimeter()[pri:0, instance:environment.TestFactory@53be6b71]" name="testQuadrateGetPerimeter" duration-ms="0" depends-on-groups="circle" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuadrateGetPerimeter -->
        <test-method status="PASS" signature="testQuadrateGetPerimeter()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testQuadrateGetPerimeter" duration-ms="0" depends-on-groups="circle" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuadrateGetPerimeter -->
        <test-method status="PASS" signature="testQuadrateGetPerimeter()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testQuadrateGetPerimeter" duration-ms="1" depends-on-groups="circle" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuadrateGetPerimeter -->
        <test-method status="PASS" signature="testQuadrateGetSquare()[pri:0, instance:environment.TestFactory@53be6b71]" name="testQuadrateGetSquare" duration-ms="0" depends-on-groups="circle" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuadrateGetSquare -->
        <test-method status="PASS" signature="testQuadrateGetSquare()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testQuadrateGetSquare" duration-ms="1" depends-on-groups="circle" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuadrateGetSquare -->
        <test-method status="PASS" signature="testQuadrateGetSquare()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testQuadrateGetSquare" duration-ms="0" depends-on-groups="circle" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuadrateGetSquare -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleGetPerimeter" duration-ms="1" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleGetPerimeter" duration-ms="1" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleGetPerimeter" duration-ms="0" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleGetPerimeter" duration-ms="1" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleGetPerimeter" duration-ms="2" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleGetPerimeter" duration-ms="0" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleGetPerimeter" duration-ms="1" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleGetPerimeter" duration-ms="0" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetPerimeter(double, double)[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleGetPerimeter" duration-ms="1" depends-on-groups="quadrate" started-at="2015-11-26T18:57:20Z" data-provider="sidesValueDataProvider" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetPerimeter -->
        <test-method status="PASS" signature="testRectangleGetSquare(double, double)[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleGetSquare" duration-ms="1" started-at="2015-11-26T18:57:20Z" depends-on-methods="environment.PositiveTestsNG.testRectangleGetPerimeter" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[500.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetSquare -->
        <test-method status="PASS" signature="testRectangleGetSquare(double, double)[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleGetSquare" duration-ms="1" started-at="2015-11-26T18:57:20Z" depends-on-methods="environment.PositiveTestsNG.testRectangleGetPerimeter" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[500.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetSquare -->
        <test-method status="PASS" signature="testRectangleGetSquare(double, double)[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleGetSquare" duration-ms="1" started-at="2015-11-26T18:57:20Z" depends-on-methods="environment.PositiveTestsNG.testRectangleGetPerimeter" finished-at="2015-11-26T18:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[500.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleGetSquare -->
        <test-method status="PASS" signature="testRectangleIsQuadrate()[pri:0, instance:environment.TestFactory@53be6b71]" name="testRectangleIsQuadrate" duration-ms="1" started-at="2015-11-26T18:57:20Z" depends-on-methods="environment.PositiveTestsNG.testRectangleGetSquare" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleIsQuadrate -->
        <test-method status="PASS" signature="testRectangleIsQuadrate()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testRectangleIsQuadrate" duration-ms="0" started-at="2015-11-26T18:57:20Z" depends-on-methods="environment.PositiveTestsNG.testRectangleGetSquare" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleIsQuadrate -->
        <test-method status="PASS" signature="testRectangleIsQuadrate()[pri:0, instance:environment.TestFactory@7a7ff2aa]" name="testRectangleIsQuadrate" duration-ms="0" started-at="2015-11-26T18:57:20Z" depends-on-methods="environment.PositiveTestsNG.testRectangleGetSquare" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleIsQuadrate -->
      </class> <!-- environment.TestFactory -->
      <class name="environment.NegativeTestsNG">
        <test-method status="PASS" signature="testPreparation()[pri:0, instance:environment.NegativeTestsNG@ed03465]" name="testPreparation" is-config="true" duration-ms="7" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreparation -->
        <test-method status="PASS" signature="testPreparation()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testPreparation" is-config="true" duration-ms="1" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreparation -->
        <test-method status="PASS" signature="testRectangleIsNotQuadrate()[pri:0, instance:environment.NegativeTestsNG@ed03465]" name="testRectangleIsNotQuadrate" duration-ms="2" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRectangleIsNotQuadrate -->
        <test-method status="PASS" signature="testFinalisation()[pri:0, instance:environment.TestFactory@6614b5ba]" name="testFinalisation" is-config="true" duration-ms="0" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinalisation -->
        <test-method status="PASS" signature="testFinalisation()[pri:0, instance:environment.NegativeTestsNG@ed03465]" name="testFinalisation" is-config="true" duration-ms="0" started-at="2015-11-26T18:57:20Z" finished-at="2015-11-26T18:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinalisation -->
      </class> <!-- environment.NegativeTestsNG -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
